using static CommonLib.Utils.Compression;

namespace CommonLib.Tests.Utils {
    [TestClass]
    public class CompressionTests {
        private static readonly byte[] c_testSpriteFrameCompressed = [
            0x00, 0x00, 0x04, 0xde, 0x7d, 0x7f, 0x9d, 0x76, 0xa9, 0xb5, 0xb2, 0x19, 0xae, 0x16, 0xc2, 0xb9,
            0xad, 0xd5, 0x7f, 0x7d, 0x7f, 0x84, 0x46, 0x8c, 0xab, 0x95, 0x34, 0x99, 0x56, 0xa1, 0xbb, 0xa5,
            0x96, 0x7d, 0x95, 0x12, 0x99, 0x34, 0x90, 0xee, 0x90, 0xc9, 0x8c, 0x65, 0x7d, 0xc6, 0x97, 0x99,
            0x79, 0x7f, 0x7d, 0x7f, 0x9d, 0x53, 0x95, 0x11, 0x08, 0xae, 0x3b, 0xa5, 0xb8, 0x9d, 0x9a, 0xa5,
            0xfb, 0x14, 0x90, 0xcf, 0x90, 0xcc, 0x8c, 0xac, 0x95, 0x10, 0x9d, 0x98, 0x99, 0x53, 0x7f, 0x7d,
            0x7f, 0x1b, 0xa5, 0x94, 0xc6, 0xdb, 0xa5, 0xb3, 0x8c, 0xad, 0x1b, 0x91, 0x13, 0x8c, 0xf1, 0x88,
            0x8a, 0x22, 0x90, 0xf1, 0x14, 0x0c, 0x95, 0x13, 0x88, 0x8c, 0x8c, 0xaa, 0x7f, 0x7d, 0x7f, 0x22,
            0x25, 0xa5, 0xb4, 0xa5, 0x91, 0x22, 0x26, 0x0d, 0xaa, 0x1c, 0x9d, 0xbc, 0x95, 0x79, 0x99, 0x78,
            0x9d, 0x78, 0xa5, 0xff, 0xb6, 0x7e, 0xa5, 0xda, 0xa1, 0xb9, 0x99, 0x77, 0x88, 0xae, 0x8c, 0xae,
            0x7f, 0x7d, 0x7f, 0x1a, 0x88, 0x44, 0x95, 0x51, 0x98, 0xec, 0x88, 0x8b, 0x27, 0x95, 0x57, 0xa9,
            0xfb, 0xb6, 0x9d, 0x0c, 0x9d, 0x77, 0xb2, 0x3b, 0x95, 0x30, 0x16, 0xba, 0x9e, 0xbe, 0x9e, 0xa1,
            0xba, 0x40, 0x23, 0x88, 0xcf, 0x29, 0x7f, 0x7d, 0x7f, 0x8c, 0xcd, 0x88, 0x66, 0x90, 0xed, 0x84,
            0x69, 0x8c, 0xf0, 0x12, 0x08, 0xba, 0xbe, 0x14, 0x1c, 0xb2, 0x39, 0xae, 0x17, 0x88, 0x89, 0xa5,
            0xd5, 0xa9, 0xd8, 0x43, 0x3f, 0xa9, 0xda, 0xa1, 0x77, 0x8c, 0xcf, 0x7d, 0x06, 0x7f, 0x7d, 0x7f,
            0x8c, 0x64, 0x7d, 0x95, 0x0d, 0x88, 0x67, 0x3b, 0x91, 0x14, 0x95, 0x56, 0x91, 0x12, 0xa1, 0xfb,
            0x94, 0xcb, 0xa5, 0xd8, 0xb6, 0x14, 0xba, 0x37, 0xb1, 0xd3, 0xb1, 0xd1, 0xa5, 0xd9, 0x16, 0x95,
            0x33, 0x95, 0x37, 0x16, 0x90, 0xf0, 0x7f, 0x7d, 0x7f, 0x84, 0x45, 0x84, 0x67, 0x84, 0x68, 0x91,
            0x37, 0x88, 0x68, 0x90, 0xf2, 0x99, 0x76, 0x5b, 0x64, 0xb5, 0xae, 0xc2, 0x31, 0xb1, 0xb0, 0xb1,
            0x8c, 0x53, 0x90, 0xef, 0x1b, 0x88, 0xad, 0x9d, 0x99, 0x1b, 0x7f, 0x7d, 0x7f, 0x14, 0x71, 0x67,
            0x8c, 0xf2, 0x38, 0x8c, 0xce, 0x91, 0x10, 0xa1, 0x72, 0xa1, 0x4f, 0xa5, 0x4c, 0x94, 0xc7, 0xad,
            0xb0, 0xbe, 0x34, 0xa9, 0x8f, 0x65, 0x49, 0x80, 0x02, 0x74, 0x4e, 0x7f, 0x7d, 0x7f, 0x46, 0x45,
            0x66, 0x71, 0x94, 0xca, 0x67, 0x95, 0x32, 0xb1, 0xf5, 0xc1, 0xf2, 0xb8, 0x20, 0xb0, 0x00, 0xca,
            0xb9, 0xca, 0xda, 0xbe, 0x13, 0xb0, 0x21, 0x8c, 0x22, 0x7e, 0x69, 0x56, 0x7f, 0x7d, 0x7f, 0x88,
            0x65, 0x36, 0x90, 0xa8, 0x8c, 0x88, 0xad, 0xd4, 0x84, 0x43, 0x75, 0xb5, 0xf3, 0xb0, 0x20, 0xcd,
            0x6a, 0xcd, 0xac, 0xc2, 0x34, 0xcf, 0x1c, 0xbd, 0xaf, 0xd1, 0xef, 0xad, 0x08, 0xce, 0xd9, 0x99,
            0x0d, 0x8c, 0x66, 0x7f, 0x7d, 0x7f, 0x88, 0x69, 0xb1, 0xf4, 0xdb, 0x3c, 0xb5, 0xcf, 0xa9, 0x8e,
            0x98, 0xea, 0xa9, 0x4c, 0x12, 0xbc, 0x63, 0xc0, 0xc6, 0xeb, 0x7c, 0xdf, 0x9f, 0xce, 0x98, 0xac,
            0x20, 0x98, 0x21, 0x21, 0x90, 0xec, 0x7f, 0x7d, 0x7f, 0x88, 0xab, 0x84, 0x21, 0xbe, 0x11, 0xe7,
            0x7c, 0xa1, 0x2a, 0xa1, 0x4d, 0xa9, 0xb0, 0xc2, 0x13, 0xbd, 0x4b, 0xd2, 0x96, 0xeb, 0xdf, 0xdb,
            0x7f, 0xca, 0xdb, 0x60, 0x94, 0xc8, 0x7f, 0x7d, 0x7f, 0xa5, 0x29, 0xa9, 0x4a, 0x98, 0xc7, 0x3a,
            0x3b, 0x8c, 0xa6, 0x84, 0x64, 0x2d, 0x8c, 0x85, 0xa1, 0x2c, 0xb6, 0x13, 0xc2, 0x98, 0xc6, 0xb9,
            0xbe, 0x56, 0xad, 0xd1, 0x90, 0xa6, 0x88, 0x85, 0x98, 0xa6, 0x98, 0x84, 0x9c, 0xa5, 0x7f, 0x7d,
            0x7f, 0x3b, 0x3a, 0xad, 0x6b, 0x3a, 0xd2, 0x92, 0x98, 0xe8, 0x88, 0xc9, 0x88, 0x64, 0xa8, 0x40,
            0xa4, 0x62, 0xa0, 0xa5, 0x46, 0x3f, 0x88, 0x00, 0x88, 0x43, 0x84, 0x86, 0x84, 0x87, 0x9c, 0xc5,
            0xac, 0xe7, 0xa0, 0xc5, 0x7f, 0x7d, 0x7f, 0xbd, 0xef, 0x3a, 0x4b, 0x6f, 0xda, 0xd5, 0xb1, 0xac,
            0x80, 0x22, 0x56, 0x89, 0x0c, 0x99, 0x2c, 0xbc, 0xa2, 0xd0, 0x80, 0xc0, 0x60, 0xc4, 0x60, 0x49,
            0x84, 0xc8, 0x84, 0xa8, 0xa9, 0x2a, 0xb1, 0x07, 0xa4, 0xc5, 0x7f, 0x7d, 0x7f, 0xd2, 0x93, 0xd6,
            0xb3, 0xb9, 0xce, 0x4b, 0xe3, 0x18, 0xd2, 0x94, 0xda, 0xd6, 0xc6, 0x10, 0xad, 0x07, 0x5d, 0x84,
            0x65, 0x8c, 0xeb, 0x8d, 0x0c, 0xb0, 0xe8, 0x61, 0xc0, 0x81, 0x94, 0x83, 0x88, 0xeb, 0x4e, 0xa8,
            0xe6, 0xac, 0xe6, 0x52, 0x99, 0xb4, 0x7f, 0x7d, 0x7f, 0xb9, 0xcd, 0x6a, 0xeb, 0x59, 0xe7, 0x38,
            0xde, 0xf6, 0xce, 0x73, 0xca, 0x52, 0xc2, 0x10, 0x00, 0xb1, 0x4a, 0x70, 0xb5, 0x29, 0x84, 0x42,
            0x5d, 0x84, 0xa7, 0x99, 0x91, 0x5f, 0xb8, 0x82, 0xac, 0xa4, 0xce, 0x95, 0x77, 0x55, 0x78, 0xa9,
            0x09, 0x98, 0xc8, 0x7a, 0x7f, 0x7d, 0x7f, 0x98, 0xc6, 0x9d, 0x08, 0x5c, 0x6b, 0xc6, 0x31, 0x03,
            0x69, 0x0f, 0x49, 0x68, 0x52, 0x8c, 0x63, 0xa5, 0x49, 0xa5, 0x4a, 0x88, 0xea, 0x5e, 0x91, 0x70,
            0x9a, 0x99, 0x88, 0xe9, 0x8c, 0xca, 0x78, 0x9d, 0x91, 0x59, 0x94, 0xa5, 0x7f, 0x7d, 0x7f, 0x8c,
            0x62, 0xad, 0x2a, 0xa5, 0xd4, 0xb1, 0x28, 0x95, 0x94, 0x54, 0x90, 0xa7, 0x90, 0x62, 0x9c, 0xa4,
            0x68, 0xad, 0x08, 0xd6, 0xb2, 0xa9, 0x6b, 0x9c, 0xe8, 0x80, 0x43, 0x92, 0x15, 0x96, 0xba, 0x91,
            0xf4, 0x94, 0x62, 0xa0, 0x61, 0x98, 0x41, 0x7f, 0x7d, 0x7f, 0xa4, 0x41, 0xac, 0x82, 0xa8, 0xa3,
            0x0f, 0x4f, 0x88, 0x21, 0x84, 0x21, 0x8c, 0x41, 0x9c, 0x84, 0x23, 0x49, 0xb9, 0x6a, 0x07, 0x5d,
            0x91, 0x90, 0x92, 0x57, 0x18, 0xb0, 0xa3, 0xc5, 0x06, 0xbd, 0x6b, 0xa5, 0x2a, 0x7f, 0x7d, 0x7f,
            0xbc, 0xa3, 0xc8, 0x80, 0xbc, 0x60, 0x2e, 0x7d, 0x88, 0x87, 0x94, 0xea, 0x9c, 0xe5, 0xa9, 0x27,
            0xad, 0x69, 0xb5, 0x8a, 0x13, 0x96, 0x99, 0x96, 0x15, 0x73, 0x89, 0x0b, 0x4e, 0xad, 0xae, 0xc2,
            0x96, 0xba, 0x54, 0x27, 0x7f, 0x7d, 0x7f, 0xbe, 0x75, 0xd2, 0xd8, 0xbe, 0x32, 0x57, 0x7d, 0x54,
            0x12, 0x98, 0xa4, 0xa0, 0xe6, 0xa5, 0x07, 0xbd, 0xcc, 0xad, 0x6a, 0x17, 0x95, 0xf3, 0x88, 0x85,
            0x88, 0xa8, 0x15, 0x88, 0x42, 0xa9, 0x6c, 0x14, 0x90, 0x63, 0x7f, 0x7d, 0x7f, 0x59, 0xb1, 0xcf,
            0xba, 0x33, 0xa5, 0x4b, 0x7d, 0x94, 0x84, 0x94, 0x63, 0x98, 0x84, 0xa4, 0xc6, 0xc9, 0xce, 0xda,
            0x31, 0xc1, 0x8c, 0xa8, 0xe7, 0x23, 0x98, 0x83, 0x8c, 0x42, 0x84, 0x22, 0x88, 0x64, 0x90, 0x42,
            0x5e, 0x22, 0x5d, 0x7f, 0x7d, 0x7f, 0x66, 0x5e, 0x66, 0x7d, 0x4f, 0xa4, 0xc5, 0xb5, 0x28, 0xb9,
            0x49, 0xc5, 0x8c, 0xb9, 0x4a, 0x4f, 0x9c, 0xa5, 0xb1, 0x07, 0xcd, 0xed, 0xbd, 0x6a, 0x35, 0x4f,
            0xa4, 0xe7, 0xb1, 0x6a, 0x23, 0x66, 0x7f, 0x7d, 0x7f, 0x1c, 0x22, 0x6f, 0x4f, 0x5e, 0x8c, 0xe9,
            0x89, 0x92, 0x5f, 0xa8, 0xc6, 0xd1, 0xcd, 0xf2, 0xd4, 0xe2, 0x72, 0x6a, 0x69, 0xbd, 0x49, 0xd5,
            0xee, 0xcd, 0xac, 0x5f, 0xa5, 0x08, 0x1b, 0x94, 0x83, 0x5e, 0x7f, 0x7d, 0x7f, 0x66, 0x22, 0x9c,
            0xc5, 0xa9, 0x08, 0x59, 0x89, 0x91, 0xae, 0x13, 0x0f, 0x70, 0xde, 0x0f, 0xc9, 0xac, 0xc5, 0x8b,
            0x5f, 0x66, 0xbd, 0x4a, 0x70, 0x6c, 0x6b, 0x02, 0xc6, 0x97, 0xca, 0xb7, 0x6f, 0x5d, 0x7f, 0x7d,
            0x7f, 0x57, 0x66, 0x22, 0x8c, 0xa6, 0xa9, 0xf1, 0xf3, 0x57, 0xe6, 0xf5, 0xde, 0x71, 0xda, 0x0f,
            0x6b, 0x6a, 0x69, 0x88, 0x41, 0x6b, 0x6a, 0xb1, 0x08, 0xa8, 0xe6, 0x02, 0xa1, 0x2a, 0xa5, 0x6c,
            0x7f, 0x7d, 0x7f, 0x98, 0xa5, 0x59, 0x90, 0x85, 0x89, 0x4f, 0xb9, 0xab, 0xca, 0x2f, 0xeb, 0x15,
            0xfb, 0x99, 0xef, 0x16, 0xc5, 0xed, 0x18, 0x66, 0x22, 0x02, 0xa0, 0xa5, 0x22, 0x66, 0x7f, 0x7d,
            0x7f, 0x76, 0x7d, 0x57, 0x9c, 0xc6, 0x74, 0xce, 0x50, 0x1d, 0x1e, 0xd6, 0xb4, 0xa0, 0xe7, 0xad,
            0x49, 0x6f, 0x5d, 0x94, 0xa5, 0x7f, 0x7d, 0x7f, 0x95, 0x6f, 0x7d, 0x27, 0x98, 0xc6, 0x90, 0x84,
            0x59, 0x03, 0xbd, 0xac, 0xde, 0xd4, 0xda, 0xb4, 0xa5, 0x29, 0xa1, 0x08, 0x29, 0x7f, 0x7d, 0x7f,
            0x57, 0x27, 0x2f, 0x2a, 0x80, 0x01, 0x7d, 0x57, 0x8c, 0x63, 0x8c, 0x64, 0x57, 0x7f, 0x7d, 0x7f,
            0x88, 0x43, 0x31, 0x7e, 0x57, 0x7e, 0x57, 0x88, 0x63, 0x7e, 0x67, 0x7f, 0x7d, 0x7f, 0x2a, 0x57,
            0x31, 0x34, 0x84, 0x21, 0x84, 0x42, 0x34, 0x57, 0x31, 0x57, 0x7e, 0x19, 0x7f, 0x7d, 0x7f, 0x57,
            0x2a, 0x27, 0x35, 0x32, 0x34, 0x31, 0x32, 0x2a, 0x98, 0xe7, 0x98, 0xc7, 0x35, 0x2a, 0x7f, 0x7d,
            0x7f, 0x57, 0x31, 0x8c, 0x84, 0x57, 0x2a, 0x39, 0x2a, 0x90, 0xa5, 0x94, 0xa6, 0x9d, 0x09, 0x58,
            0x35, 0x27, 0x7f, 0x7d, 0x7f, 0x38, 0x32, 0x2a, 0x35, 0x2a, 0x27, 0x7d, 0x29, 0x9c, 0xe7, 0xa5,
            0x2a, 0x36, 0x2a, 0x7f, 0x7d, 0x7f, 0x27, 0x35, 0x29, 0x7f, 0x7d, 0x7f, 0x7d, 0x7f, 0xf2, 0x00,
            0x79, 0xc0, 0x01, 0x07, 0x94, 0x00, 0x08, 0xf3, 0x20, 0x00, 0x07, 0x90, 0x00, 0x00, 0x1e, 0x20,
            0x00, 0x00, 0x1e, 0x10, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0x00, 0x3c, 0x60, 0x00, 0x00, 0xf1, 0x80,
            0x00, 0x03, 0xc6, 0x00, 0x00, 0x0f, 0x18, 0x00, 0x00, 0x3c, 0x80, 0x00, 0x03, 0xca, 0x00, 0x00,
            0xf2, 0x80, 0x00, 0x01, 0xdc, 0x60, 0x40, 0x00, 0x3a, 0x86, 0x40, 0x10, 0x07, 0x50, 0xa0, 0x04,
            0x00, 0x74, 0x00, 0x00, 0x00, 0x0e, 0xc0, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x1e, 0x20, 0x00,
            0x00, 0x1e, 0x10, 0x00, 0x00, 0x1e, 0x10, 0x00, 0x00, 0x1e, 0x00, 0x40, 0x00, 0x03, 0xb9, 0x10,
            0x00, 0x00, 0xec, 0x00, 0x02, 0x00, 0x77, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xf1, 0x80,
            0x00, 0x0f, 0x40, 0x00, 0x07, 0xa0, 0x00, 0x07, 0xac, 0x00, 0x8f, 0x59, 0x08, 0x0f, 0x50, 0x04,
            0x81, 0xe8, 0x40, 0x40, 0x1e, 0x80, 0x90, 0x01, 0xe7, 0x10, 0x50, 0x3d, 0x40, 0xf2, 0x4f, 0x89,
            0x00, 0xff
        ];

        private static readonly ushort[] c_testSpriteFrameUncompressed = [
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x9D76, 0xA9B5, 0xB219, 0xAE16, 0xC2B9, 0xADD5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8446, 0x8CAB, 0x9534, 0x9956, 0xA1BB, 0xA596, 0x0000, 0x9512, 0x9934, 0x90EE, 0x90C9, 0x8C65, 0x0000, 0x0000, 0xC697, 0x9979, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x9D53, 0x9511, 0x9534, 0xAE3B, 0xA5B8, 0x9D9A, 0xA5FB, 0x9511, 0x90CF, 0x90CC, 0x8CAC, 0x9510, 0x9D98, 0x9953, 0x9953, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8CAC, 0x8CAC, 0xA594, 0xC6DB, 0xA5B3, 0x8CAD, 0x8CAC, 0x9113, 0x8CF1, 0x888A, 0x8CAD, 0x90F1, 0x9511, 0x9512, 0x9513, 0x888C, 0x8CAA, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8CAD, 0x888A, 0xA5B4, 0xA591, 0x8CAD, 0x90F1, 0x9934, 0xAA1C, 0x9DBC, 0x9579, 0x9978, 0x9D78, 0xA5FF, 0xB67E, 0xA5DA, 0xA1B9, 0x9977, 0x88AE, 0x8CAE, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x90CC, 0x8844, 0x9551, 0x98EC, 0x888B, 0x9513, 0x9557, 0xA9FB, 0xB69D, 0x9512, 0x9D77, 0xB23B, 0x9530, 0xA5B8, 0xBA9E, 0xBE9E, 0xA1BA, 0xB23B, 0x9113, 0x88CF, 0x8CAA, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8CCD, 0x8866, 0x90ED, 0x8469, 0x8CF0, 0x9979, 0x9534, 0xBABE, 0x9511, 0x9510, 0xB239, 0xAE17, 0x8889, 0xA5D5, 0xA9D8, 0xBE9E, 0x9D77, 0xA9DA, 0xA177, 0x8CCF, 0x0000, 0x8446, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8C64, 0x0000, 0x950D, 0x8867, 0x888B, 0x9114, 0x9556, 0x9112, 0xA1FB, 0x94CB, 0xA5D8, 0xB614, 0xBA37, 0xB1D3, 0xB1D1, 0xA5D9, 0xA5B8, 0x9533, 0x9537, 0xA5B8, 0x90F0, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8445, 0x8467, 0x8468, 0x9137, 0x8868, 0x90F2, 0x9976, 0x94CB, 0x90F0, 0xB5AE, 0xC231, 0xB1B0, 0xB18C, 0x8CCF, 0x90EF, 0x8CAC, 0x88AD, 0x9D99, 0x8CAC, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x9511, 0x88AD, 0x8468, 0x8CF2, 0x8844, 0x8CCE, 0x9110, 0xA172, 0xA14F, 0xA54C, 0x94C7, 0xADB0, 0xBE34, 0xA98F, 0x8445, 0x8469, 0x8002, 0x8CCE, 0x8889, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8CCD, 0x88CF, 0x8467, 0x88AD, 0x94CA, 0x8468, 0x9532, 0xB1F5, 0xC1F2, 0xB820, 0xB000, 0xCAB9, 0xCADA, 0xBE13, 0xB021, 0x8C22, 0x8000, 0x8868, 0x8867, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8865, 0x88AE, 0x90A8, 0x8C88, 0xADD4, 0x8443, 0x9110, 0xB5F3, 0xB020, 0xCD6A, 0xCDAC, 0xC234, 0xCF1C, 0xBDAF, 0xD1EF, 0xAD08, 0xCED9, 0x990D, 0x8C66, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8869, 0xB1F4, 0xDB3C, 0xB5CF, 0xA98E, 0x98EA, 0xA94C, 0xB020, 0xBC63, 0xC0C6, 0xEB7C, 0xDF9F, 0xCE98, 0xAC20, 0x9821, 0xA98E, 0x90EC, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x88AB, 0x8421, 0xBE11, 0xE77C, 0xA12A, 0xA14D, 0xA9B0, 0xC213, 0xBD4B, 0xD296, 0xEBDF, 0xDB7F, 0xCADB, 0xB1D1, 0x94C8, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0xA529, 0xA94A, 0x98C7, 0xA529, 0xA94A, 0x8CA6, 0x8464, 0x8421, 0x8C85, 0xA12C, 0xB613, 0xC298, 0xC6B9, 0xBE56, 0xADD1, 0x90A6, 0x8885, 0x98A6, 0x9884, 0x9CA5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0xA94A, 0xA529, 0xAD6B, 0xAD6B, 0xAD6B, 0xAD6B, 0xA529, 0xD292, 0x98E8, 0x88C9, 0x88C9, 0x8864, 0xA840, 0xA462, 0xA0A5, 0x90A6, 0x8C85, 0x8800, 0x8843, 0x8486, 0x8487, 0x9CC5, 0xACE7, 0xA0C5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x7FFF, 0xBDEF, 0xA529, 0xAD6B, 0xB18C, 0xB18C, 0xB18C, 0xB18C, 0xB18C, 0xDAD5, 0xB1AC, 0x8022, 0x8487, 0x890C, 0x992C, 0xBCA2, 0xD080, 0xC060, 0xC460, 0xC460, 0x9884, 0x84C8, 0x84A8, 0xA92A, 0xB107, 0xA4C5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x7FFF, 0xD293, 0xD6B3, 0xB9CE, 0xAD6B, 0xAD6B, 0xAD6B, 0xE318, 0xD294, 0xDAD6, 0xC610, 0xAD07, 0x8022, 0x8465, 0x8CEB, 0x8D0C, 0xB0E8, 0xD080, 0xD080, 0xC081, 0x9483, 0x88EB, 0x88C9, 0xA8E6, 0xACE6, 0xA0A5, 0x99B4, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x7FFF, 0xB9CD, 0xD6B3, 0xEB59, 0xE738, 0xDEF6, 0xCE73, 0xCA52, 0xC210, 0xE738, 0xB14A, 0xAD07, 0xB529, 0x8442, 0x8022, 0x84A7, 0x9991, 0x992C, 0xB882, 0xACA4, 0xCE95, 0x88EB, 0x8486, 0xA8E6, 0xA909, 0x98C8, 0x99B4, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x98C6, 0x9D08, 0xB1AC, 0xB9CE, 0xC631, 0xCA52, 0xD293, 0x98C6, 0x9884, 0xA4C5, 0xA0A5, 0x8C63, 0xA549, 0xA54A, 0x88EA, 0x890C, 0x9170, 0x9A99, 0x88E9, 0x8CCA, 0xA8E6, 0x9D91, 0xA0C5, 0x94A5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8C62, 0xAD2A, 0xA5D4, 0xB128, 0x9594, 0x8843, 0x90A7, 0x9062, 0x9CA4, 0xA4C5, 0xAD08, 0xD6B2, 0xA96B, 0x9CE8, 0x8043, 0x9215, 0x96BA, 0x91F4, 0x9462, 0xA061, 0x9841, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0xA441, 0xAC82, 0xA8A3, 0x98C6, 0x8864, 0x8821, 0x8421, 0x8C41, 0x9C84, 0x9CA4, 0x9884, 0xB96A, 0x8442, 0x8022, 0x9190, 0x9257, 0x88E9, 0xB0A3, 0xC506, 0xBD6B, 0xA52A, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0xBCA3, 0xC880, 0xBC60, 0x9841, 0x0000, 0x8887, 0x94EA, 0x9CE5, 0xA927, 0xAD69, 0xB58A, 0xA549, 0x9699, 0x9615, 0x8D0C, 0x890B, 0x88C9, 0xADAE, 0xC296, 0xBA54, 0x9CE8, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0xBE75, 0xD2D8, 0xBE32, 0x9CC5, 0x0000, 0x8843, 0x8C63, 0x98A4, 0xA0E6, 0xA507, 0xBDCC, 0xAD6A, 0x9A99, 0x95F3, 0x8885, 0x88A8, 0x88EA, 0x8842, 0xA96C, 0xA54A, 0x9063, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x9063, 0xB1CF, 0xBA33, 0xA54B, 0x0000, 0x0000, 0x9484, 0x9463, 0x9884, 0xA4C6, 0xC9CE, 0xDA31, 0xC18C, 0xA8E7, 0x9CA4, 0x9883, 0x8C42, 0x8422, 0x8864, 0x9042, 0x9463, 0x9062, 0x9484, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8C42, 0x9463, 0x9463, 0x8C42, 0x0000, 0x0000, 0x98A4, 0xA4C5, 0xB528, 0xB949, 0xC58C, 0xB94A, 0x98A4, 0x9CA5, 0xB107, 0xCDED, 0xBD6A, 0x9C84, 0x98A4, 0xA4E7, 0xB16A, 0x9CA4, 0x8C42, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8C62, 0x9062, 0x9CA5, 0x98A4, 0x9463, 0x8CE9, 0x8992, 0x9884, 0xA8C6, 0xD1CD, 0xF2D4, 0xE272, 0xA4C5, 0x9042, 0xBD49, 0xBD49, 0xD5EE, 0xCDAC, 0x9884, 0xA508, 0x94A5, 0x9483, 0x9463, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8C42, 0x9062, 0x9CC5, 0xA908, 0x9063, 0x8991, 0xAE13, 0x98C6, 0xB107, 0xDE0F, 0xC9AC, 0xC58B, 0x9884, 0x8C42, 0xBD4A, 0xB107, 0xB949, 0xB528, 0x9483, 0xC697, 0xCAB7, 0x9CA5, 0x9484, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8842, 0x8C42, 0x9062, 0x8CA6, 0xA9F1, 0xF357, 0xE6F5, 0xDE71, 0xDA0F, 0xB528, 0xA4C5, 0x9042, 0x8841, 0xB528, 0xA4C5, 0xB108, 0xA8E6, 0x9483, 0xA12A, 0xA56C, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x98A5, 0x9063, 0x9085, 0x894F, 0xB9AB, 0xCA2F, 0xEB15, 0xFB99, 0xEF16, 0xC5ED, 0x98A5, 0x8C42, 0x9062, 0x9483, 0xA0A5, 0x9062, 0x8C42, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8992, 0x0000, 0x8842, 0x9CC6, 0xB16A, 0xCE50, 0xEB15, 0xFB99, 0xD6B4, 0xA0E7, 0xAD49, 0x9CA5, 0x9484, 0x94A5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x956F, 0x0000, 0x94A5, 0x98C6, 0x9084, 0x9063, 0x9CC5, 0xBDAC, 0xDED4, 0xDAB4, 0xA529, 0xA108, 0x98C6, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8842, 0x94A5, 0xA108, 0x9084, 0x8001, 0x0000, 0x8842, 0x8C63, 0x8C64, 0x8842, 0x8842, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8843, 0x8C63, 0x8C63, 0x8000, 0x8842, 0x8000, 0x8000, 0x8842, 0x8863, 0x8000, 0x8422, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x9084, 0x8842, 0x8C63, 0x8863, 0x8421, 0x8442, 0x8863, 0x8842, 0x8842, 0x8C63, 0x8C63, 0x8842, 0x8000, 0x9085, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8842, 0x8842, 0x9084, 0x94A5, 0x8421, 0x8C64, 0x8863, 0x8C63, 0x8C63, 0x8C64, 0x9084, 0x98E7, 0x98C7, 0x8421, 0x9084, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x8842, 0x8C63, 0x8C84, 0x8842, 0x8842, 0x9084, 0x9084, 0x8C84, 0x9084, 0x90A5, 0x94A6, 0x9D09, 0xA96C, 0x8421, 0x94A5, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x98C7, 0x8C64, 0x9084, 0x9084, 0x8421, 0x9084, 0x94A5, 0x0000, 0x0000, 0x0000, 0x98C6, 0x9CE7, 0xA52A, 0x8442, 0x9084, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x94A5, 0x8421, 0x98C6, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
            0x7FFF, 0x7FFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7FFF, 0x7FFF, 
        ];

        private class CompressStringTestCase : TestCase {
            public CompressStringTestCase(string name, int expectedCompressedLength = 0) : base(name) {
                ExpectedCompressedLength = expectedCompressedLength;
            }

            public readonly int ExpectedCompressedLength;
        }

        [TestMethod]
        public void CompressThenDecompressStringsOfVariousLengthsReturnsOriginalString() {
            var testCases = new CompressStringTestCase[]{
                new CompressStringTestCase("", 4),
                new CompressStringTestCase("He", 6),
                new CompressStringTestCase("Hell", 8),
                new CompressStringTestCase("Hello,", 10),
                new CompressStringTestCase("Hello, w", 12),
                new CompressStringTestCase("Hello, wor", 14),
                new CompressStringTestCase("Hello, world", 16),
                new CompressStringTestCase("Hello, world! ", 18),
                new CompressStringTestCase("Hello, world! Ho", 20),
                new CompressStringTestCase("Hello, world! How ", 22),
                new CompressStringTestCase("Hello, world! How ya", 24),
                new CompressStringTestCase("Hello, world! How ya d", 26),
                new CompressStringTestCase("Hello, world! How ya doi", 28),
                new CompressStringTestCase("Hello, world! How ya doin?", 30),
                new CompressStringTestCase("Hello, world! Hello, world! ", 20),
                new CompressStringTestCase("Hello, world! Hello, world! Hello, world! ", 20),
                new CompressStringTestCase("Hello, world!  Hello, world!  Hello, world! ", 38),
            };

            TestCase.Run(testCases, testCase => {
                string originalString = testCase.Name;
                byte[] originalBytes = System.Text.Encoding.UTF8.GetBytes(originalString);

                var compressedBytes = Compress(originalBytes);
                Assert.AreEqual(compressedBytes.Length, testCase.ExpectedCompressedLength);

                var decompressedBytes = Decompress(compressedBytes, null, out int bytesRead, out bool endDataFound);

                var resultString = System.Text.Encoding.UTF8.GetString(decompressedBytes);
                Assert.AreEqual(originalString, resultString);
                Assert.AreEqual(bytesRead, compressedBytes.Length);
                Assert.IsTrue(endDataFound);
            });
        }

        [TestMethod]
        public void DecompressSpriteData_ProducesExpectedDataForFrame() {
            var decompressed = DecompressSpriteData(c_testSpriteFrameCompressed, 0, out _);
            Assert.AreEqual(1600, decompressed.Length);
            Assert.IsTrue(Enumerable.SequenceEqual(c_testSpriteFrameUncompressed, decompressed));
        }

        [TestMethod]
        public void CompressSpriteData_ProducesExpectedDataForFrame() {
            var compressed = CompressSpriteData(c_testSpriteFrameUncompressed, 0, c_testSpriteFrameUncompressed.Length);
            Assert.AreEqual(0x572, compressed.Length);
            Assert.IsTrue(Enumerable.SequenceEqual(c_testSpriteFrameCompressed, compressed));
        }

        [TestMethod]
        public void CompressThenDecompressSpriteFrameProducesTheOriginalFrame() {
            var compressed = CompressSpriteData(c_testSpriteFrameUncompressed, 0, c_testSpriteFrameUncompressed.Length);
            var decompressed = DecompressSpriteData(compressed, 0, out _);
            Assert.IsTrue(Enumerable.SequenceEqual(c_testSpriteFrameUncompressed, decompressed));
        }
    }
}